# approach/default.ini
# Default configuration for KG Consistency PoC

[api]
api_name = google
model_name = gemini-1.5-pro-latest
# Add other model parameters as needed based on API docs
# Groq parameters example: temperature = 0.7, max_tokens = 500, top_p = 0.9
# Google parameters example: temperature = 0.7, max_output_tokens = 500, top_p = 0.9
temperature = 0.7
max_tokens = 500 # Using max_tokens as a generic name, map to specific API param in code

[format]
# Define the markers and separator based on the expected LLM output
# TripleBackquote is represented as ```
separator = ###END_TRIPLETS###
triplet_start_marker = ```markdown
triplet_end_marker = ```
story_start_marker = ```text
story_end_marker = ```
# Description of how triplets should look within the markers (used in prompt)
triplet_format_desc = Each triplet should be on a new line in the format: (Subject, predicate, Object)

[prompts]
# System prompt defines the LLM's persona and overall instructions
system = You are a highly accurate knowledge graph generator and storyteller. Your task is to take a list of factual triplets provided to you. You must re-state these exact facts in the specified output format and then write a natural language story that fully incorporates these facts. Ensure the output strictly follows the specified format, including markers and separator.

# Query prompt defines the specific task for this turn, including dynamic data
# Use placeholders like {triplets_input}, {separator}, {triplet_format_desc}, etc.
query = """
Process the following list of factual triplets.

First, output these same facts in the specified triplet output format, enclosed in the triplet start and end markers.
Second, output a natural language story based ONLY on these facts, enclosed in the story start and end markers.
Separate the triplets section from the story section with the specified separator string.

---
REQUIRED OUTPUT FORMAT:
{triplet_start_marker}
[LIST OF TRIPLETS IN SPECIFIED FORMAT]
{triplet_end_marker}
{separator}
{story_start_marker}
[NATURAL LANGUAGE STORY BASED ON TRIPLETS]
{story_end_marker}
---
Separator String: {separator}
Triplet Output Format Description: {triplet_format_desc}
Triplet Start Marker: {triplet_start_marker}
Triplet End Marker: {triplet_end_marker}
Story Start Marker: {story_start_marker}
Story End Marker: {story_end_marker}

---
Input Triplets (Facts to use):
{triplets_input}
---
Generate the output now.
"""
